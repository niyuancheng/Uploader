"use strict";function t(t){throw new Error(t)}class e{constructor(t){this.dispatchEvent=function(t,...e){return this._events[t]&&this._events[t].forEach((t=>{t.call(this,...e)})),this},this._events={};for(let e in t)this[e]=t[e]}addEventListener(t,e){return this._events[t]=this._events[t]||[],!this._events[t].includes(e)&&this._events[t].push(e),this}removeEventListener(e,s){if(this._events[e].includes(s)){let t=this._events[e].indexOf(s);this._events[e].splice(t,1)}else t("传入的监听者不存在");return this}}class s{constructor(){this.loadedSizeArray=[],this.totalSize=0,this._events={}}sendRequest(t,e,s,i={},n,l,o){let a=new XMLHttpRequest;return{p:new Promise(((h,r)=>{a.upload.onloadstart=t=>{this.totalSize=t.total},a.upload.onprogress=t=>{t.lengthComputable&&(o.call(l,"chunkProgress",t.total,t.loaded),this.loadedSizeArray[n]=t.loaded,this._events.fileProgress&&this._events.fileProgress.forEach((t=>t.call(this,o))))},a.onload=t=>{(a.status>=200&&a.status<300||304===a.status)&&h({data:JSON.parse(a.responseText),type:"success"})},a.onerror=t=>{r({data:a.responseText,type:"error"})},a.onabort=t=>{r({data:a.responseText,type:"abort"})},a.open(e,t);for(let t in i)a.setRequestHeader(t,i[t]);a.send(s)})),xhr:a}}}class i extends s{constructor(t,e,s){super(),this.tasks=[],this.chunks=[],this.file=t,this.context=e,this.dispatchEvent=s,this.chunks.push(this.file),this._events.fileProgress=this._events.fileProgress||[],this._events.fileProgress.push((t=>{t.call(this.context,"fileProgress",this.file,this.loadedSizeArray.reduce(((t,e)=>t+e)))}))}slice(t){let e=this.file.size,s=0,i=[];for(;s<e;){let e=s+t;i.push(this.file.slice(s,e)),s=e}this.chunks=i}getFileId(){return this.file.name+this.file.size}getUploadedChunk(t){let e=window.sessionStorage.getItem("$file"+t);return e?JSON.parse(e):[]}saveUploadedChunk(t,e){let s=window.sessionStorage.getItem("$file"+t)?JSON.parse(window.sessionStorage.getItem("$file"+t)):[];s.push(e),window.sessionStorage.setItem("$file"+t,JSON.stringify(s))}addTask(t,e,s){this.chunks.forEach(((e,i)=>{if(!this.getUploadedChunk(this.getFileId()).includes(i+1)){let n=new FormData;n.append("context",this.getFileId()),n.append("chunk",e),n.append("chunkId",String(i+1));let{p:l,xhr:o}=this.sendRequest(t,"post",n,{"Content-Type":"multipart/form-data;charset=utf-8"},i,this.context,s);l.then((t=>{this.saveUploadedChunk(this.getFileId(),i+1),"success"===t.type&&(s.call(this.context,"chunkSuccess",this.file,e,i+1,t.data),s.call(this.context,"chunkComplete",this.file,e,i+1,t.data))}),(t=>{"abort"===t.type?(s.call(this.context,"chunkAbort",this.file,e,i+1,t.data),s.call(this.context,"chunkComplete",this.file,e,i+1,t.data)):"error"===t.type&&(s.call(this.context,"chunkError",this.file,e,i+1,t.data),s.call(this.context,"chunkComplete",this.file,e,i+1,t.data))})),this.tasks.push({p:l,xhr:o})}}))}triggerTask(t){Promise.allSettled(this.tasks).then((e=>{for(let s of e)if("rejected"===s.status)return t.call(this.context,"fileComplete",this.file);t.call(this.context,"fileComplete",this.file),t.call(this.context,"fileSuccess",this.file)}))}uploadTask(t,e,s,i,n){n&&this.slice(t),this.addTask(e,s,i),this.triggerTask(i)}cancelTask(){this.tasks.forEach(((t,e)=>{this.getUploadedChunk(this.getFileId()).includes(e+1)||t.xhr.abort()}))}}console.log("%c UploaderJS: %c 欢迎使用大文件传输库UploadeJS，UploaderJS是一款效率极高的文件上传库，具有多种完善配置，关注作者Nova获取更多最新咨询吧","background: #606060; color: #fff; border-radius: 3px 0 0 3px;","background: #1475B2; color: #fff; border-radius: 0 3px 3px 0;");const n=/\s*#.+/g,l=/\s*\..+/g;module.exports=class extends e{constructor(t,e={}){super(e),this.configuration={ifSendByChunk:!0,chunkSize:104857.6,autoUpload:!0,chunkApi:"",fileApi:"",target:""},this.fileMap=new Map,this.dispatchEvent=function(t,...e){this._events[t]&&this._events[t].forEach((t=>t.call(this,...e)))},this.configuration=Object.assign(this.configuration,t),this.init()}init(){let t=this.configuration.target||void 0;t&&this.assign(t),this.clearChunkStorage()}clearChunkStorage(){for(let t in window.sessionStorage)/^\$file.*/.test(t)&&window.sessionStorage.removeItem(t)}assign(e){if("string"==typeof e)if(n.test(e)){let s=document.querySelector(e);s||t("无法找到传入的id对应的DOM元素"),s instanceof HTMLInputElement&&"file"===s.type?this.fileInputElement=s:t("传入的id对应的DOM元素不是file类型")}else if(l.test(e)){let s=document.querySelectorAll(e)[0];s||t("无法找到传入的class对应的DOM元素"),s instanceof HTMLInputElement&&"file"===s.type?this.fileInputElement=s:t("传入的class对应的DOM元素不是file类型")}else t("传入的target参数类型错误");else e instanceof HTMLInputElement?"file"===e.type?this.fileInputElement=e:t("传入的DOM元素不是file类型"):t("传入的target只能为字符串或者DOM元素");this.fileInputElement.addEventListener("change",(t=>{[...t.target.files].forEach((t=>{console.log(t);let e=new i(t,this,this.dispatchEvent);this.fileMap.set(t,e),this.configuration.autoUpload&&this.uploadFile(t,this.configuration.ifSendByChunk)}))}))}uploadFile(e,s=!0){if(!this.fileMap.get(e))return t("你输入的文件不存在");this.fileMap.get(e).uploadTask(this.configuration.chunkSize,this.configuration.chunkApi,this.configuration.fileApi,this.dispatchEvent,s)}cancelUploadFile(e){if(!this.fileMap.get(e))return t("你输入的文件不存在");this.fileMap.get(e).cancelTask()}};
