!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Uploader=t()}(this,(function(){"use strict";function e(e){throw new Error(e)}class t{constructor(e){this.dispatchEvent=function(e,...t){return this._events[e]&&this._events[e].forEach((e=>{e.call(this,...t)})),this},this._events={};for(let t in e)this[t]=e[t]}addEventListener(e,t){return this._events[e]=this._events[e]||[],!this._events[e].includes(t)&&this._events[e].push(t),this}removeEventListener(t,s){if(this._events[t].includes(s)){let e=this._events[t].indexOf(s);this._events[t].splice(e,1)}else e("传入的监听者不存在");return this}}class s{constructor(){this.loadedSizeArray=[],this.totalSize=0,this._events={}}sendRequest(e,t,s,i={},n,l,o){let a=new XMLHttpRequest;return{p:new Promise(((h,r)=>{a.upload.onloadstart=e=>{this.totalSize=e.total},a.upload.onprogress=e=>{e.lengthComputable&&(o.call(l,"chunkProgress",e.total,e.loaded),this.loadedSizeArray[n]=e.loaded,this._events.fileProgress&&this._events.fileProgress.forEach((e=>e.call(this,o))))},a.onload=e=>{(a.status>=200&&a.status<300||304===a.status)&&h({data:JSON.parse(a.responseText),type:"success"})},a.onerror=e=>{r({data:a.responseText,type:"error"})},a.onabort=e=>{r({data:a.responseText,type:"abort"})},a.open(t,e);for(let e in i)a.setRequestHeader(e,i[e]);a.send(s)})),xhr:a}}}class i extends s{constructor(e,t,s){super(),this.tasks=[],this.chunks=[],this.file=e,this.context=t,this.dispatchEvent=s,this.chunks.push(this.file),this._events.fileProgress=this._events.fileProgress||[],this._events.fileProgress.push((e=>{e.call(this.context,"fileProgress",this.file,this.loadedSizeArray.reduce(((e,t)=>e+t)))}))}slice(e){let t=this.file.size,s=0,i=[];for(;s<t;){let t=s+e;i.push(this.file.slice(s,t)),s=t}this.chunks=i}getFileId(){return this.file.name+this.file.size}getUploadedChunk(e){let t=window.sessionStorage.getItem("$file"+e);return t?JSON.parse(t):[]}saveUploadedChunk(e,t){let s=window.sessionStorage.getItem("$file"+e)?JSON.parse(window.sessionStorage.getItem("$file"+e)):[];s.push(t),window.sessionStorage.setItem("$file"+e,JSON.stringify(s))}addTask(e,t,s){this.chunks.forEach(((t,i)=>{if(!this.getUploadedChunk(this.getFileId()).includes(i+1)){let n=new FormData;n.append("context",this.getFileId()),n.append("chunk",t),n.append("chunkId",String(i+1));let{p:l,xhr:o}=this.sendRequest(e,"post",n,{"Content-Type":"multipart/form-data;charset=utf-8"},i,this.context,s);l.then((e=>{this.saveUploadedChunk(this.getFileId(),i+1),"success"===e.type&&(s.call(this.context,"chunkSuccess",this.file,t,i+1,e.data),s.call(this.context,"chunkComplete",this.file,t,i+1,e.data))}),(e=>{"abort"===e.type?(s.call(this.context,"chunkAbort",this.file,t,i+1,e.data),s.call(this.context,"chunkComplete",this.file,t,i+1,e.data)):"error"===e.type&&(s.call(this.context,"chunkError",this.file,t,i+1,e.data),s.call(this.context,"chunkComplete",this.file,t,i+1,e.data))})),this.tasks.push({p:l,xhr:o})}}))}triggerTask(e){Promise.allSettled(this.tasks).then((t=>{for(let s of t)if("rejected"===s.status)return e.call(this.context,"fileComplete",this.file);e.call(this.context,"fileComplete",this.file),e.call(this.context,"fileSuccess",this.file)}))}uploadTask(e,t,s,i,n){n&&this.slice(e),this.addTask(t,s,i),this.triggerTask(i)}cancelTask(){this.tasks.forEach(((e,t)=>{this.getUploadedChunk(this.getFileId()).includes(t+1)||e.xhr.abort()}))}}console.log("%c UploaderJS: %c 欢迎使用大文件传输库UploadeJS，UploaderJS是一款效率极高的文件上传库，具有多种完善配置，关注作者Nova获取更多最新咨询吧","background: #606060; color: #fff; border-radius: 3px 0 0 3px;","background: #1475B2; color: #fff; border-radius: 0 3px 3px 0;");const n=/\s*#.+/g,l=/\s*\..+/g;return class extends t{constructor(e,t={}){super(t),this.configuration={ifSendByChunk:!0,chunkSize:104857.6,autoUpload:!0,chunkApi:"",fileApi:"",target:""},this.fileMap=new Map,this.dispatchEvent=function(e,...t){this._events[e]&&this._events[e].forEach((e=>e.call(this,...t)))},this.configuration=Object.assign(this.configuration,e),this.init()}init(){let e=this.configuration.target||void 0;e&&this.assign(e),this.clearChunkStorage()}clearChunkStorage(){for(let e in window.sessionStorage)/^\$file.*/.test(e)&&window.sessionStorage.removeItem(e)}assign(t){if("string"==typeof t)if(n.test(t)){let s=document.querySelector(t);s||e("无法找到传入的id对应的DOM元素"),s instanceof HTMLInputElement&&"file"===s.type?this.fileInputElement=s:e("传入的id对应的DOM元素不是file类型")}else if(l.test(t)){let s=document.querySelectorAll(t)[0];s||e("无法找到传入的class对应的DOM元素"),s instanceof HTMLInputElement&&"file"===s.type?this.fileInputElement=s:e("传入的class对应的DOM元素不是file类型")}else e("传入的target参数类型错误");else t instanceof HTMLInputElement?"file"===t.type?this.fileInputElement=t:e("传入的DOM元素不是file类型"):e("传入的target只能为字符串或者DOM元素");this.fileInputElement.addEventListener("change",(e=>{[...e.target.files].forEach((e=>{console.log(e);let t=new i(e,this,this.dispatchEvent);this.fileMap.set(e,t),this.configuration.autoUpload&&this.uploadFile(e,this.configuration.ifSendByChunk)}))}))}uploadFile(t,s=!0){if(!this.fileMap.get(t))return e("你输入的文件不存在");this.fileMap.get(t).uploadTask(this.configuration.chunkSize,this.configuration.chunkApi,this.configuration.fileApi,this.dispatchEvent,s)}cancelUploadFile(t){if(!this.fileMap.get(t))return e("你输入的文件不存在");this.fileMap.get(t).cancelTask()}}}));
